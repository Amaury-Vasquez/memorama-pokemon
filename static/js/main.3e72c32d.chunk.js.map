{"version":3,"sources":["components/AntLayout.jsx","components/PokeCard.jsx","components/Game.jsx","components/IntegerStep.jsx","components/Selection.jsx","pages/Home.jsx","components/App.js","serviceWorker.js","index.js"],"names":["Content","Layout","Footer","AntLayout","props","className","theme","backIcon","title","style","padding","margin","Item","children","textAlign","Meta","Card","PokeCard","state","classList","pokeData","data","callback","index","matched","description","imageUrl","id","activeUrl","hoverable","onClick","cover","this","src","alt","name","preview","React","Component","Game","max","region","limit","offset","loading","error","min","pokeCards","references","cards","undefined","activeCard","ref","active","score","url","fetch","response","json","Math","floor","random","len","a","Set","size","add","randomInt","Array","from","setState","getData","generateUrl","then","fetchPokes","results","res","Promise","all","createCards","map","element","catch","array","i","length","j","list","arr1","randomArray","pokeNumber","arr2","slice","shuffle","numbers","concat","key","createRef","push","bind","current","prevRef","prevId","setClassList","setUrl","setTimeout","antIcon","LoadingOutlined","fontSize","spin","indicator","Fragment","label","fetchData","Swal","fire","icon","text","footer","IntegerStep","inputValue","onChange","value","span","Selection","regions","input","radio","radioValue","cardNumber","bordered","width","addonBefore","placeholder","prefix","UserOutlined","e","target","Group","buttonStyle","find","Button","block","type","Home","useState","startGame","setStart","setName","setRadioValue","setNumber","App","exact","path","component","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","console","message"],"mappings":"qSAGQA,EAAoBC,IAApBD,QAASE,EAAWD,IAAXC,OAuBFC,MArBf,SAAmBC,GACjB,OACE,kBAAC,IAAD,CAAQC,UAAU,uBAChB,kBAAC,IAAD,CACEC,MAAM,OACND,UAAU,mBACVE,UAAU,EACVC,MAAM,qBAER,kBAACR,EAAD,CAASS,MAAO,CAAEC,QAAS,WACzB,kBAAC,IAAD,CAAYD,MAAO,CAAEE,OAAQ,WAC3B,kBAAC,IAAWC,KAAZ,aACA,kBAAC,IAAWA,KAAZ,cAEF,yBAAKP,UAAU,uBAAuBD,EAAMS,WAE9C,kBAACX,EAAD,CAAQO,MAAO,CAAEK,UAAW,WAA5B,+B,+HChBEC,EAASC,IAATD,KAkDOE,E,kDA9Cb,WAAYb,GAAQ,IAAD,8BACjB,cAAMA,IACDc,MAAQ,CACXC,UAAW,GACXC,SAAUhB,EAAMiB,KAChBC,SAAUlB,EAAMkB,SAChBC,MAAOnB,EAAMmB,MACbC,SAAS,EACThB,MAAO,GACPiB,YAAa,GACbC,SAAU,CACR,iGADQ,wDAEyCtB,EAAMiB,KAAKM,GAFpD,SAIVC,UACE,kGAfa,E,qDAmBT,IAAD,OACP,OACE,kBAAC,IAAD,CACEC,WAAS,EACTC,QAAS,WACP,EAAKZ,MAAMI,SAAS,EAAKJ,MAAMK,QAEjCQ,MACE,kBAAC,IAAD,CACE1B,UAAW2B,KAAKd,MAAMC,UACtBc,IAAKD,KAAKd,MAAMU,UAChBM,IAAKF,KAAKd,MAAME,SAASe,KACzBC,SAAS,KAIb,kBAACrB,EAAD,CACEP,MAAOwB,KAAKd,MAAMV,MAClBiB,YAC6B,KAA3BO,KAAKd,MAAMO,YAAX,WAAoCO,KAAKd,MAAMO,aAAgB,a,GAvCpDY,IAAMC,WCuMdC,E,kDAtMb,WAAYnC,GAAQ,IAAD,sBACjB,cAAMA,GACN,IAAMoC,EAAMpC,EAAMqC,OAAOC,MAAQtC,EAAMqC,OAAOE,OAF7B,OAIjB,EAAKzB,MAAQ,CACX0B,SAAS,EACTC,MAAO,KACPL,MACAM,IALU,EAMVC,UAAW,CAAEC,WAAY,GAAIC,MAAO,IACpC7B,cAAU8B,EACVC,WAAY,CAAEC,SAAKF,EAAWvB,IAAK,GACnC0B,QAAQ,EACRC,MAAO,GAbQ,E,6FAiBLC,G,uFACWC,MAAMD,G,cAAvBE,E,gBACOA,EAASC,O,4KAGZf,EAAQD,GAElB,MAAM,4CAAN,OAAmDC,EAAnD,kBAAmED,K,gCAG3DF,EAAKM,GACb,OAAOa,KAAKC,MAAMD,KAAKE,UAAYrB,EAAMM,GAAOA,K,kCAGtCgB,EAAKtB,EAAKM,GAEpB,IADA,IAAMiB,EAAI,IAAIC,IACPD,EAAEE,KAAOH,GAAKC,EAAEG,IAAIlC,KAAKmC,UAAU3B,EAAKM,IAC/C,OAAOsB,MAAMC,KAAKN,K,6JAIlB/B,KAAKsC,SAAS,CAAE1B,SAAS,EAAMC,MAAO,O,kBAEjBb,KAAKuC,QACtBvC,KAAKwC,YAAYxC,KAAK5B,MAAMqC,OAAOE,OAAQX,KAAK5B,MAAMqC,OAAOC,QAC7D+B,O,cAFIpD,E,gBAGiBW,KAAK0C,WAAWrD,EAAKsD,SAASF,MAAK,SAACG,GAAD,OACxDC,QAAQC,IAAIF,M,OADRxD,E,OAGA2B,EAAYf,KAAK+C,YAAY3D,GACnCY,KAAKsC,SAAS,CAAEvB,YAAW3B,WAAUwB,SAAS,EAAOC,MAAO,O,kDAE5Db,KAAKsC,SAAS,CAAE1B,SAAS,EAAOC,MAAK,O,0LAIxBxB,G,qGACRA,EAAK2D,IAAL,uCACL,WAAOC,GAAP,SAAAlB,EAAA,sEAAyB,EAAKQ,QAAQU,EAAQ1B,KAAK2B,OAAM,iBAAO,MAAhE,mFADK,wD,gIAKDC,GACN,IAAK,IAAIC,EAAID,EAAME,OAAS,EAAGD,EAAI,EAAGA,IAAK,CACzC,IAAME,EAAI3B,KAAKC,MAAMD,KAAKE,UAAYuB,EAAI,IADD,EAElB,CAACD,EAAMG,GAAIH,EAAMC,IAAvCD,EAAMC,GAFkC,KAE9BD,EAAMG,GAFwB,KAI3C,OAAOH,I,kCAGGI,GAAO,IAAD,OACVC,EAAOxD,KAAKyD,YAChBzD,KAAK5B,MAAMsF,WACX1D,KAAKd,MAAMsB,IACXR,KAAKd,MAAM4B,KAEP6C,EAAOH,EAAKI,QAClB5D,KAAK6D,QAAQL,GACb,IAAMM,EAAUN,EAAKO,OAAOJ,GACtB3C,EAAa,GACbC,EAAQ6C,EAAQd,KAAI,SAACC,EAASe,GAClC,IAAM5C,EAAMf,IAAM4D,YAElB,OADAjD,EAAWkD,KAAK9C,GAEd,kBAAC,EAAD,CACE/B,KAAMkE,EAAKN,GACXe,IAAKA,EACL1E,SAAU,EAAKA,SAAS6E,KAAK,GAC7B/C,IAAKA,EACL7B,MAAOyE,OAIb,MAAO,CAAEhD,aAAYC,W,mCAGVG,GACX,MAAuC,WAAhCA,EAAIgD,QAAQlF,MAAMC,UAAyB,GAAK,W,6BAGlDiC,GACL,OAAOA,EAAIgD,QAAQlF,MAAMQ,SAAS,KAAO0B,EAAIgD,QAAQlF,MAAMU,UACvDwB,EAAIgD,QAAQlF,MAAMQ,SAAS,GAC3B0B,EAAIgD,QAAQlF,MAAMQ,SAAS,K,+BAGxBH,GAAQ,IAAD,OACR6B,EAAMpB,KAAKd,MAAM6B,UAAUC,WAAWzB,GACtCI,EAAKyB,EAAIgD,QAAQhG,MAAMiB,KAAKM,GAC9BH,EAAU4B,EAAIgD,QAAQlF,MAAMM,QAChC,IAAKA,EACH,GAAKQ,KAAKd,MAAMmC,QAQT,GAAIrB,KAAKd,MAAMiC,WAAWC,MAAQA,EAAK,CAC5C,IAAMiD,EAAUrE,KAAKd,MAAMiC,WAAWC,IAChCkD,EAAStE,KAAKd,MAAMiC,WAAWxB,GACjC2B,EAAQtB,KAAKd,MAAMoC,MACnBgD,IAAW3E,GACbH,GAAU,EACV8B,IACA+C,EAAQD,QAAQ9B,SAAS,CAAE9C,YAC3B4B,EAAIgD,QAAQ9B,SAAS,CACnBnD,UAAWa,KAAKuE,aAAanD,GAC7BxB,UAAWI,KAAKwE,OAAOpD,GACvB5B,UACAhB,MAAO4C,EAAIgD,QAAQhG,MAAMiB,KAAKc,KAC9BV,YAAa2B,EAAIgD,QAAQhG,MAAMiB,KAAKM,OAGtCyB,EAAIgD,QAAQ9B,SAAS,CACnBnD,UAAWa,KAAKuE,aAAanD,GAC7BxB,UAAWI,KAAKwE,OAAOpD,GACvB5C,MAAO4C,EAAIgD,QAAQhG,MAAMiB,KAAKc,KAC9BV,YAAa2B,EAAIgD,QAAQhG,MAAMiB,KAAKM,KAEtC8E,YAAW,WACTJ,EAAQD,QAAQ9B,SAAS,CACvBnD,UAAW,EAAKoF,aAAaF,GAC7BzE,UAAW,EAAK4E,OAAOH,GACvB7F,MAAO,GACPiB,YAAa,KAEf2B,EAAIgD,QAAQ9B,SAAS,CACnBnD,UAAW,EAAKoF,aAAanD,GAC7BxB,UAAW,EAAK4E,OAAOpD,GACvB5C,MAAO,GACPiB,YAAa,OAEd,MAELO,KAAKsC,SAAS,CAAEnB,WAAY,CAAEC,MAAKzB,MAAM0B,QAAQ,EAAOC,gBA5CxDF,EAAIgD,QAAQ9B,SAAS,CACnBnD,UAAWa,KAAKuE,aAAanD,GAC7BxB,UAAWI,KAAKwE,OAAOpD,GACvB5C,MAAO4C,EAAIgD,QAAQhG,MAAMiB,KAAKc,KAC9BV,YAAa2B,EAAIgD,QAAQhG,MAAMiB,KAAKM,KAEtCK,KAAKsC,SAAS,CAAEnB,WAAY,CAAEC,MAAKzB,MAAM0B,QAAQ,M,+BA4CrD,IAAMqD,EAAU,kBAACC,EAAA,EAAD,CAAiBlG,MAAO,CAAEmG,SAAU,IAAMC,MAAI,IAC9D,YAA+B3D,IAAxBlB,KAAKd,MAAME,SAChB,yBAAKf,UAAU,WACb,kBAAC,IAAD,CAAM4D,KAAK,QAAQ6C,UAAWJ,KAGhC,kBAAC,IAAMK,SAAP,KACE,kBAAC,IAAD,CAAc1G,UAAU,qBAAqBG,MAAM,YACjD,kBAAC,IAAaI,KAAd,CAAmBoG,MAAM,WACtBhF,KAAK5B,MAAM+B,KAAM,KAEpB,kBAAC,IAAavB,KAAd,CAAmBoG,MAAM,iBACtBhF,KAAKd,MAAMoC,MAAO,MAGvB,yBAAKjD,UAAU,WACb,yBAAKA,UAAU,kBAAkB2B,KAAKd,MAAM6B,UAAUE,MAAtD,S,0CAONjB,KAAKiF,c,2CAIDjF,KAAKd,MAAMoC,QAAUtB,KAAK5B,MAAMsF,aAClCwB,IAAKC,KAAK,CACRC,KAAM,UACN5G,MAAO,eACP6G,KAAM,aACNC,OAAQ,0CAEVtF,KAAK5B,MAAMkB,gB,GAlMEe,IAAMC,W,qECkCViF,E,4MAtCbrG,MAAQ,CACNsG,WAAY,G,EAGdC,SAAW,SAACC,GACV,EAAKpD,SAAS,CACZkD,WAAYE,IAEd,EAAKtH,MAAMkB,SAASoG,I,uDAGZ,IACAF,EAAexF,KAAKd,MAApBsG,WACR,OACE,kBAAC,IAAD,CAAKnH,UAAU,kBACb,kBAAC,IAAD,CAAKsH,KAAM,IACT,kBAAC,IAAD,CACE7E,IAAK,EACLN,IAAK,GACLiF,SAAUzF,KAAKyF,SACfC,MAA6B,kBAAfF,EAA0BA,EAAa,KAGzD,kBAAC,IAAD,CAAKG,KAAM,GACT,kBAAC,IAAD,CACE1D,KAAK,QACLnB,IAAK,EACLN,IAAK,GACL/B,MAAO,CAAEE,OAAQ,UACjB+G,MAAOF,EACPC,SAAUzF,KAAKyF,iB,GA/BDpF,IAAMC,WCuEjBsF,MArEf,YAAkC,IAAbtG,EAAY,EAAZA,SACbuG,EAAU,CACd,CAAEpF,OAAQ,QAASE,OAAQ,EAAGD,MAAO,KACrC,CAAED,OAAQ,QAASE,OAAQ,IAAKD,MAAO,KACvC,CAAED,OAAQ,QAASE,OAAQ,IAAKD,MAAO,KACvC,CAAED,OAAQ,SAAUE,OAAQ,IAAKD,MAAO,MAEpCoF,EAAQzF,IAAM4D,YAClB8B,EAAQ1F,IAAM4D,YACZ+B,EAAa,GACf7F,EAAO,GACP8F,EAAa,EAEf,OACE,yBAAK5H,UAAU,WACb,kBAAC,IAAD,CACEA,UAAU,iBACVwB,WAAS,EACTrB,MAAM,mBACN0H,UAAU,EACVzH,MAAO,CAAE0H,MAAO,MAEhB,kBAAC,IAAD,CACE/E,IAAK0E,EACLM,YAAY,SACZ/H,UAAU,QACV4D,KAAK,QACLoE,YAAY,SACZC,OAAQ,kBAACC,EAAA,EAAD,MACRd,SAAU,SAACe,GAAD,OAAQrG,EAAOqG,EAAEC,OAAOf,SAEpC,uBAAGrH,UAAU,mBAAb,aACA,kBAAC,IAAMqI,MAAP,CACEtF,IAAK2E,EACL9D,KAAK,QACL5D,UAAU,QACVsI,YAAY,QACZlB,SAAU,SAACe,GAAD,OACPR,EAAaH,EAAQe,MACpB,SAAC3D,GAAD,OAAaA,EAAQxC,SAAW+F,EAAEC,OAAOf,WAI5CG,EAAQ7C,KAAI,SAACC,GACZ,OACE,kBAAC,IAAM4D,OAAP,CAAcxI,UAAU,eAAeqH,MAAOzC,EAAQxC,QACnDwC,EAAQxC,YAKjB,uBAAGpC,UAAU,mBAAb,6BACA,kBAAC,EAAD,CAAaiB,SAAU,SAACoG,GAAD,OAAYO,EAAaP,KAChD,kBAAC,IAAD,CACE5F,QAAS,WACPR,EAASa,EAAM6F,EAAYC,IAE7Ba,OAAK,EACLzI,UAAU,gBACV0I,KAAK,UACL9E,KAAK,SAPP,aCnBO+E,MAjCf,WAAiB,IAAD,EACgBC,oBAAS,GADzB,mBACPC,EADO,KACIC,EADJ,OAEUF,mBAAS,IAFnB,mBAEP9G,EAFO,KAEDiH,EAFC,OAGsBH,mBAAS,IAH/B,mBAGPjB,EAHO,KAGKqB,EAHL,OAIkBJ,mBAAS,IAJ3B,mBAIPhB,EAJO,KAIKqB,EAJL,KAKd,OAAqB,IAAdJ,EACL,kBAAC,EAAD,CACE/G,KAAMA,EACNM,OAAQuF,EACRtC,WAAYuC,EACZ3G,SAAU,kBAAM6H,GAAS,MAG3B,kBAAC,EAAD,CACE7H,SAAU,SAACa,EAAM6F,EAAYC,GACR,KAAfD,GAA8B,KAAT7F,EACvB+E,IAAKC,KAAK,CACRC,KAAM,QACN5G,MAAO,SACP6G,KAAM,4BACNC,OAAQ,6CAGV6B,GAAS,GACTC,EAAQjH,GACRkH,EAAcrB,GACdsB,EAAUrB,Q,OCdLsB,MAZf,WACE,OACE,kBAAC,IAAD,KACE,kBAAC,EAAD,KACE,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAOC,OAAK,EAACC,KAAK,oBAAoBC,UAAWV,QCCvCW,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCVNC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,SDuHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrB9F,MAAK,SAAA+F,GACJA,EAAaC,gBAEdvF,OAAM,SAAArC,GACL6H,QAAQ7H,MAAMA,EAAM8H,a","file":"static/js/main.3e72c32d.chunk.js","sourcesContent":["import React from \"react\";\nimport { Layout, Breadcrumb, PageHeader } from \"antd\";\n\nconst { Content, Footer } = Layout;\n\nfunction AntLayout(props) {\n  return (\n    <Layout className=\"layout home-content\">\n      <PageHeader\n        theme=\"dark\"\n        className=\"site-page-header\"\n        backIcon={false}\n        title=\"Memorama pokemon\"\n      />\n      <Content style={{ padding: \"0 50px\" }}>\n        <Breadcrumb style={{ margin: \"16px 0\" }}>\n          <Breadcrumb.Item>Home</Breadcrumb.Item>\n          <Breadcrumb.Item>Game</Breadcrumb.Item>\n        </Breadcrumb>\n        <div className=\"site-layout-content\">{props.children}</div>\n      </Content>\n      <Footer style={{ textAlign: \"center\" }}>Creado por @AmauryVasquez</Footer>\n    </Layout>\n  );\n}\n\nexport default AntLayout;\n","import React from \"react\";\nimport { Card, Image } from \"antd\";\n\nimport \"../styles/index.css\";\n\nconst { Meta } = Card;\n// import { Spin } from \"antd\";\n// import { LoadingOutlined } from \"@ant-design/icons\";\nclass PokeCard extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      classList: \"\",\n      pokeData: props.data,\n      callback: props.callback,\n      index: props.index,\n      matched: false,\n      title: \"\",\n      description: \"\",\n      imageUrl: [\n        \"https://www.kindpng.com/picc/m/366-3667647_thumb-image-pokemon-go-gym-logo-png-transparent.png\",\n        `https://pokeres.bastionbot.org/images/pokemon/${props.data.id}.png`,\n      ],\n      activeUrl:\n        \"https://www.kindpng.com/picc/m/366-3667647_thumb-image-pokemon-go-gym-logo-png-transparent.png\",\n    };\n  }\n\n  render() {\n    return (\n      <Card\n        hoverable\n        onClick={() => {\n          this.state.callback(this.state.index);\n        }}\n        cover={\n          <Image\n            className={this.state.classList}\n            src={this.state.activeUrl}\n            alt={this.state.pokeData.name}\n            preview={false}\n          />\n        }\n      >\n        <Meta\n          title={this.state.title}\n          description={\n            this.state.description !== \"\" ? `#${this.state.description}` : \"???\"\n          }\n        />\n      </Card>\n    );\n  }\n}\n\nexport default PokeCard;\n","import React from \"react\";\nimport { Spin, Descriptions } from \"antd\";\nimport { LoadingOutlined } from \"@ant-design/icons\";\nimport Swal from \"sweetalert2\";\n\nimport \"../styles/index.css\";\nimport PokeCard from \"./PokeCard\";\n\nclass Game extends React.Component {\n  constructor(props) {\n    super(props);\n    const max = props.region.limit - props.region.offset;\n    const min = 1;\n    this.state = {\n      loading: false,\n      error: null,\n      max,\n      min,\n      pokeCards: { references: [], cards: [] },\n      pokeData: undefined,\n      activeCard: { ref: undefined, id: -1 },\n      active: false,\n      score: 0,\n    };\n  }\n\n  async getData(url) {\n    const response = await fetch(url);\n    return await response.json();\n  }\n\n  generateUrl(offset, limit) {\n    // `https://pokeapi.co/api/v2/pokemon?offset=151&limit=151`;\n    return `https://pokeapi.co/api/v2/pokemon?offset=${offset}&limit=${limit}`;\n  }\n\n  randomInt(max, min) {\n    return Math.floor(Math.random() * (max - min) + min);\n  }\n\n  randomArray(len, max, min) {\n    const a = new Set();\n    while (a.size < len) a.add(this.randomInt(max, min));\n    return Array.from(a);\n  }\n\n  async fetchData() {\n    this.setState({ loading: true, error: null });\n    try {\n      const data = await this.getData(\n        this.generateUrl(this.props.region.offset, this.props.region.limit)\n      ).then();\n      const pokeData = await this.fetchPokes(data.results).then((res) =>\n        Promise.all(res)\n      );\n      const pokeCards = this.createCards(pokeData);\n      this.setState({ pokeCards, pokeData, loading: false, error: null });\n    } catch (error) {\n      this.setState({ loading: false, error });\n    }\n  }\n\n  async fetchPokes(data) {\n    return data.map(\n      async (element) => await this.getData(element.url).catch(() => ({}))\n    );\n  }\n\n  shuffle(array) {\n    for (let i = array.length - 1; i > 0; i--) {\n      const j = Math.floor(Math.random() * (i + 1));\n      [array[i], array[j]] = [array[j], array[i]];\n    }\n    return array;\n  }\n\n  createCards(list) {\n    const arr1 = this.randomArray(\n      this.props.pokeNumber,\n      this.state.max,\n      this.state.min\n    );\n    const arr2 = arr1.slice();\n    this.shuffle(arr1);\n    const numbers = arr1.concat(arr2);\n    const references = [];\n    const cards = numbers.map((element, key) => {\n      const ref = React.createRef();\n      references.push(ref);\n      return (\n        <PokeCard\n          data={list[element]}\n          key={key}\n          callback={this.callback.bind(this)}\n          ref={ref}\n          index={key}\n        />\n      );\n    });\n    return { references, cards };\n  }\n\n  setClassList(ref) {\n    return ref.current.state.classList === \"active\" ? \"\" : \"active\";\n  }\n\n  setUrl(ref) {\n    return ref.current.state.imageUrl[0] === ref.current.state.activeUrl\n      ? ref.current.state.imageUrl[1]\n      : ref.current.state.imageUrl[0];\n  }\n\n  callback(index) {\n    const ref = this.state.pokeCards.references[index];\n    const id = ref.current.props.data.id;\n    let matched = ref.current.state.matched;\n    if (!matched) {\n      if (!this.state.active) {\n        ref.current.setState({\n          classList: this.setClassList(ref),\n          activeUrl: this.setUrl(ref),\n          title: ref.current.props.data.name,\n          description: ref.current.props.data.id,\n        });\n        this.setState({ activeCard: { ref, id }, active: true });\n      } else if (this.state.activeCard.ref !== ref) {\n        const prevRef = this.state.activeCard.ref;\n        const prevId = this.state.activeCard.id;\n        let score = this.state.score;\n        if (prevId === id) {\n          matched = true;\n          score++;\n          prevRef.current.setState({ matched });\n          ref.current.setState({\n            classList: this.setClassList(ref),\n            activeUrl: this.setUrl(ref),\n            matched,\n            title: ref.current.props.data.name,\n            description: ref.current.props.data.id,\n          });\n        } else {\n          ref.current.setState({\n            classList: this.setClassList(ref),\n            activeUrl: this.setUrl(ref),\n            title: ref.current.props.data.name,\n            description: ref.current.props.data.id,\n          });\n          setTimeout(() => {\n            prevRef.current.setState({\n              classList: this.setClassList(prevRef),\n              activeUrl: this.setUrl(prevRef),\n              title: \"\",\n              description: \"\",\n            });\n            ref.current.setState({\n              classList: this.setClassList(ref),\n              activeUrl: this.setUrl(ref),\n              title: \"\",\n              description: \"\",\n            });\n          }, 1000);\n        }\n        this.setState({ activeCard: { ref, id }, active: false, score });\n      }\n    }\n  }\n\n  render() {\n    const antIcon = <LoadingOutlined style={{ fontSize: 24 }} spin />;\n    return this.state.pokeData === undefined ? (\n      <div className=\"content\">\n        <Spin size=\"large\" indicator={antIcon} />\n      </div>\n    ) : (\n      <React.Fragment>\n        <Descriptions className=\"player-description\" title=\"Memorama\">\n          <Descriptions.Item label=\"Jugador\">\n            {this.props.name}{\" \"}\n          </Descriptions.Item>\n          <Descriptions.Item label=\"Puntuación\">\n            {this.state.score}{\" \"}\n          </Descriptions.Item>\n        </Descriptions>\n        <div className=\"content\">\n          <div className=\"game-container\">{this.state.pokeCards.cards} </div>\n        </div>\n      </React.Fragment>\n    );\n  }\n\n  componentDidMount() {\n    this.fetchData();\n  }\n\n  componentDidUpdate() {\n    if (this.state.score === this.props.pokeNumber) {\n      Swal.fire({\n        icon: \"success\",\n        title: \"Felicidades!\",\n        text: \"Has ganado\",\n        footer: \"Ingresa tus datos para jugar de nuevo\",\n      });\n      this.props.callback();\n    }\n  }\n}\n\nexport default Game;\n","import React from \"react\";\nimport { Slider, InputNumber, Row, Col } from \"antd\";\n\nclass IntegerStep extends React.Component {\n  state = {\n    inputValue: 5,\n  };\n\n  onChange = (value) => {\n    this.setState({\n      inputValue: value,\n    });\n    this.props.callback(value);\n  };\n\n  render() {\n    const { inputValue } = this.state;\n    return (\n      <Row className=\"integer-slider\">\n        <Col span={12}>\n          <Slider\n            min={5}\n            max={24}\n            onChange={this.onChange}\n            value={typeof inputValue === \"number\" ? inputValue : 0}\n          />\n        </Col>\n        <Col span={4}>\n          <InputNumber\n            size=\"large\"\n            min={6}\n            max={24}\n            style={{ margin: \"0 16px\" }}\n            value={inputValue}\n            onChange={this.onChange}\n          />\n        </Col>\n      </Row>\n    );\n  }\n}\n\nexport default IntegerStep;\n","import React from \"react\";\nimport { Card, Input, Radio, Button } from \"antd\";\nimport { UserOutlined } from \"@ant-design/icons\";\nimport IntegerStep from \"./IntegerStep\";\n\nfunction Selection({ callback }) {\n  const regions = [\n    { region: \"Kanto\", offset: 0, limit: 151 },\n    { region: \"Johto\", offset: 151, limit: 251 },\n    { region: \"Hoenn\", offset: 251, limit: 386 },\n    { region: \"Sinnoh\", offset: 386, limit: 493 },\n  ];\n  const input = React.createRef(),\n    radio = React.createRef();\n  let radioValue = \"\",\n    name = \"\",\n    cardNumber = 6;\n\n  return (\n    <div className=\"content\">\n      <Card\n        className=\"selection-card\"\n        hoverable\n        title=\"Configuración\"\n        bordered={true}\n        style={{ width: 400 }}\n      >\n        <Input\n          ref={input}\n          addonBefore=\"Nombre\"\n          className=\"input\"\n          size=\"large\"\n          placeholder=\"Amaury\"\n          prefix={<UserOutlined />}\n          onChange={(e) => (name = e.target.value)}\n        />\n        <p className=\"selection-label\">Región</p>\n        <Radio.Group\n          ref={radio}\n          size=\"large\"\n          className=\"radio\"\n          buttonStyle=\"solid\"\n          onChange={(e) =>\n            (radioValue = regions.find(\n              (element) => element.region === e.target.value\n            ))\n          }\n        >\n          {regions.map((element) => {\n            return (\n              <Radio.Button className=\"radio-button\" value={element.region}>\n                {element.region}\n              </Radio.Button>\n            );\n          })}\n        </Radio.Group>\n        <p className=\"selection-label\">Número de pokes(6-24) </p>\n        <IntegerStep callback={(value) => (cardNumber = value)} />\n        <Button\n          onClick={() => {\n            callback(name, radioValue, cardNumber);\n          }}\n          block\n          className=\"submit-button\"\n          type=\"primary\"\n          size=\"large\"\n        >\n          Jugar!\n        </Button>\n      </Card>\n    </div>\n  );\n}\n\nexport default Selection;\n","import React, { useState } from \"react\";\nimport Swal from \"sweetalert2\";\n\nimport Game from \"../components/Game\";\nimport Selection from \"../components/Selection\";\n\nfunction Home() {\n  const [startGame, setStart] = useState(false);\n  const [name, setName] = useState(\"\");\n  const [radioValue, setRadioValue] = useState(\"\");\n  const [cardNumber, setNumber] = useState(10);\n  return startGame === true ? (\n    <Game\n      name={name}\n      region={radioValue}\n      pokeNumber={cardNumber}\n      callback={() => setStart(false)}\n    />\n  ) : (\n    <Selection\n      callback={(name, radioValue, cardNumber) => {\n        if (radioValue === \"\" || name === \"\") {\n          Swal.fire({\n            icon: \"error\",\n            title: \"Error!\",\n            text: \"Datos de usuario omitidos\",\n            footer: \"Rellena los datos para empezar el juego\",\n          });\n        } else {\n          setStart(true);\n          setName(name);\n          setRadioValue(radioValue);\n          setNumber(cardNumber);\n        }\n      }}\n    />\n  );\n}\n\nexport default Home;\n","import React from \"react\";\nimport { BrowserRouter, Switch, Route } from \"react-router-dom\";\nimport AntLayout from \"./AntLayout\";\nimport Home from \"../pages/Home\";\nimport \"../styles/App.css\";\n\nfunction App() {\n  return (\n    <BrowserRouter>\n      <AntLayout>\n        <Switch>\n          <Route exact path=\"/memorama-pokemon\" component={Home} />\n        </Switch>\n      </AntLayout>\n    </BrowserRouter>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"antd/dist/antd.css\";\n\nimport \"./styles/index.css\";\nimport App from \"./components/App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}